<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <!--指明 controller 所在包，并扫描其中的注解-->
    <context:component-scan base-package="com.sys.controller"/>

    <!-- 静态资源(js、image等)的访问 再进行js、image、css等静态资源访问的相关配置，这样，SpringMVC才能访问网站内的静态资源-->
    <mvc:default-servlet-handler/>

    <!-- 开启注解 再开启springmvc注解模式，由于我们利用注解方法来进行相关定义，可以省去很多的配置-->
    <mvc:annotation-driven/>

    <!--ViewResolver 视图解析器  再进行视图解析器的相关配置：-->
    <!--用于支持Servlet、JSP视图解析-->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--讲解：
    （1） jpa:repositories：这一部分涉及到数据库的接口，将在后面详解；
    （2）entityManagerFactory：实体管理器工厂，读取persistence.xml配置；
    （3）transactionManager：事务管理器，利用entityManager进行事务管理；
    （4）tx:annotation-driven：打开事务管理器的注解驱动，可以使用注解的方法操纵数据库。-->

    <!-- 表示JPA Repository所在的包 -->
    <jpa:repositories base-package="com.sys.repository"/>

    <!-- 链接到persistence.xml -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="defaultPersistenceUnit"/>
    </bean>

    <!-- 事务管理 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 开启事务管理注解 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>